{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "builtinAdministratorAccount": {
      "type": "string",
      "defaultValue": "ContosoAdmin",
      "metadata": { "description": "Builtin\\Administrator account's name for the Virtual Machines. This is not a domain account." }
    },
    "builtinAdministratorPassword": {
      "type": "securestring",
      "defaultValue": "Password123!@#",
      "metadata": { "description": "Password for the Builtin Administrator account. Default is 'Password123!@#'" }
    },
    "UserPrincipalName": {
      "type": "string",
      "defaultValue": "seccxp.ninja",
      "metadata": { 
        "description": "The UPN for users who will be provisioned in Active Directory.  Useful when later using AAD Connect" 
      }
    },
    "DomainName": {
      "type": "string",
      "defaultValue": "Contoso.Azure",
      "metadata": {
        "description": "This is the FQDN of the Active Directory domain"
      }
    },
    "NetBiosName": {
      "type": "string",
      "defaultValue": "CONTOSO",
      "metadata": {
        "description:": "NetBIOS name for the Forest"
      }
    },
    "JeffLPassword": {
      "type": "securestring",
      "defaultValue": "Password$fun",
      "metadata": {
        "description": "Password for JeffL. Default is 'Password$fun'  JeffL is admin on VictimPC (but no other domain credentials)."
      }
    },
    "SamiraAPassword":{
      "type": "securestring",
      "defaultValue": "NinjaCat123!@#",
      "metadata": {
        "description": "SamiraA password. Default is 'NinjaCat123!@#'  SamiraA is Domain Admin."
      }
    },
    "RonHdPassword":{
      "type": "securestring",
      "defaultValue": "FightingTiger$",
      "metadata": {
        "description": "RonHD's password. Default is FightingTiger$. RonHD is member of Helpdesk."
      }
    },
    "LisaVPassword":{
      "type": "securestring",
      "defaultValue": "HightImpactUser1!",
      "metadata": {
        "description": "LisaV's password. By default it is 'HightImpactUser1!'  LisaV has access to High Impact data and will be used in future labs."
      }
    }

  },
  "variables": {
    "PrivateIpAddressesArray": {
      "type": "array",
      "Ip": [
        "10.0.24.4",
        "10.0.24.10",
        "10.0.24.11"
      ]
    },
    "vNetName": "AatpSaPlaybook-vNet",
    "vNetSubnetName": "Subnet",
    "vSubnetRefId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNetName'), variables('vNetSubnetName'))]",

    "GenericNicName": "Nic",
    "GenericPublicIpAddressName": "PublicIp",
    "GenericStorageAccountName": "[concat(uniqueString(resourceGroup().id), 'sa')]",

    "DcVmName": "ContosoDc",
    "DcPromoteDcDsc": "DcPromoDsc",
    "DcRepoPackageUri": "https://github.com/ciberesponce/AatpAttackSimulationPlaybook/raw/master/DSC/ProvisionDcDsc.zip",
    "DcDscCreateForestFunction": "ProvisionDcDsc.ps1\\CreateADForest",

    "VictimVmName": "VictimPc",

    "AdminVmName": "AdminPc"
  },
  "resources": [
    {
      "apiVersion": "2018-12-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vNetName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "dhcpOptions":{
          "dnsServers": "[variables('PrivateIpAddressesArray').Ip[0]]"
        },
        "addressSpace": { "addressPrefixes": [ "10.0.24.0/24" ] },
        "subnets": [
          {
            "name": "[variables('vNetSubnetName')]",
            "properties": { "addressPrefix": "10.0.24.0/24" }
          }
        ]
      }
    },
    {
      "apiVersion": "2018-12-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('GenericPublicIpAddressName'), copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "count": 3,
        "name": "GenericPublicIpAddressLoop"
      },
      "sku": {
        "name":"Basic"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2018-02-01",
      "name": "[concat(variables('GenericStorageAccountName'), copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "count": 3,
        "name": "GenericStorageAccountLoop"
      },
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {}
    },
    {
      "apiVersion": "2017-09-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('GenericNicName'), copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "NicLoop",
        "count": 3
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('GenericPublicIpAddressName'), copyIndex()))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('PrivateIpAddressesArray').Ip[copyIndex('NicLoop')]]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('GenericPublicIpAddressName'), copyIndex()))]"
              },
              "subnet": {
                "id": "[variables('vSubnetRefId')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-10-01",
      "name": "[variables('DcVmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [ 
        "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('GenericNicName'), 0))]",
        "[resourceId('Microsoft.Storage/storageAccounts', concat(variables('GenericStorageAccountName'),0))]"
      ],
      "properties":{
        "hardwareProfile": {
          "vmSize": "Standard_A4_v2"
        },
        "osProfile": {
          "computerName": "[variables('DcVmName')]",
          "adminUsername": "[parameters('builtinAdministratorAccount')]",
          "adminPassword": "[parameters('builtinAdministratorPassword')]"
        },
        "storageProfile":{
          "imageReference":{
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
          },
          "osDisk":{
            "name": "[concat(variables('GenericStorageAccountName'), 0)]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile":{
          "networkInterfaces":[
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('GenericNicName'), 0))]"
            }
          ]
        },
        "diagnosticsProfile":{
          "bootDiagnostics":{
            "enabled": false
          }
        }
      },
      "resources":[
        {
          "type": "extensions",
          "apiVersion": "2018-10-01",
          "name": "[variables('DcPromoteDcDsc')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('DcVmName'))]"
          ],
          "properties":{
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "autoUpgradeMinorVersion": true,
            "typeHandlerVersion": "2.9",
            "settings": {
              "modulesUrl": "[variables('DcRepoPackageUri')]",
              "script": "ProvisionDcDsc.ps1",
              "configurationFunction": "[variables('DcDscCreateForestFunction')]",
              "properties": {
                "DomainName": "[parameters('DomainName')]",
                "UserPrincipalName": "[parameters('UserPrincipalName')]",
                "NetBiosName": "[parameters('NetBiosName')]",
                "AdminCreds": {
                  "UserName": "[parameters('builtinAdministratorAccount')]",
                  "Password": "PrivateSettingsRef:AdminPassword"
                },
                "JeffLCreds":{
                  "UserName": "JeffL",
                  "Password": "PrivateSettingsRef:JeffLPassword"
                },
                "SamiraACreds": {
                  "UserName": "SamiraA",
                  "Password": "PrivateSettingsRef:SamiraAPassword"
                },
                "RonHdCreds": {
                  "UserName": "RonHD",
                  "Password": "PrivateSettingsRef:RonHDPassword"
                },
                "LisaVCreds": {
                  "UserName": "LisaV",
                  "Password": "PrivateSettingsRef:LisaVPassword"
                }
              }
            },
            "ProtectedSettings":{
              "Items": {
                "AdminPassword": "[parameters('builtinAdministratorPassword')]",
                "JeffLPassword": "[parameters('JeffLPassword')]",
                "SamiraAPassword": "[parameters('SamiraAPassword')]",
                "RonHDPassword": "[parameters('RonHdPassword')]",
                "LisaVPassword": "[parameters('LisaVPassword')]"
              }
            }
          }
        }
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-10-01",
      "name": "[variables('VictimVmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [ 
        "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('GenericNicName'), 1))]",
        "[resourceId('Microsoft.Storage/storageAccounts', concat(variables('GenericStorageAccountName'),1))]",
        "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('DcVmName'), variables('DcPromoteDcDsc'))]"
      ],
      "properties":{
        "hardwareProfile": {
          "vmSize": "Standard_A2_v2"
        },
        "osProfile": {
          "computerName": "[variables('VictimVmName')]",
          "adminUsername": "[parameters('builtinAdministratorAccount')]",
          "adminPassword": "[parameters('builtinAdministratorPassword')]"
        },
        "storageProfile":{
          "imageReference":{
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
          },
          "osDisk":{
            "name": "[concat(variables('GenericStorageAccountName'), 1)]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile":{
          "networkInterfaces":[
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('GenericNicName'), 1))]"
            }
          ]
        },
        "diagnosticsProfile":{
          "bootDiagnostics":{
            "enabled": false
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-10-01",
      "name": "[variables('AdminVmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [ 
        "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('GenericNicName'), 2))]",
        "[resourceId('Microsoft.Storage/storageAccounts', concat(variables('GenericStorageAccountName'),2))]",
        "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('DcVmName'), variables('DcPromoteDcDsc'))]"
      ],
      "properties":{
        "hardwareProfile": {
          "vmSize": "Standard_A2_v2"
        },
        "osProfile": {
          "computerName": "[variables('AdminVmName')]",
          "adminUsername": "[parameters('builtinAdministratorAccount')]",
          "adminPassword": "[parameters('builtinAdministratorPassword')]"
        },
        "storageProfile":{
          "imageReference":{
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
          },
          "osDisk":{
            "name": "[concat(variables('GenericStorageAccountName'), 2)]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile":{
          "networkInterfaces":[
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('GenericNicName'), 2))]"
            }
          ]
        },
        "diagnosticsProfile":{
          "bootDiagnostics":{
            "enabled": false
          }
        }
      }
    }
  ]
}